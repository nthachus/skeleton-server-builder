version: "3"
services:
  builder:
    build:
      context: .
      dockerfile: debian.Dockerfile
    image: "debian-skeleton:slim"
    container_name: skeleton-builder
    volumes:
      - ".:/root/builder"
    working_dir: /root
    command: /bin/bash -c "
      ./builder/build-frontend.sh &&
      ./builder/build-backend.sh &&
      ./builder/build-package.sh &&
      tail -f /dev/null
      "
    stop_signal: SIGKILL

  apk-builder:
    build:
      context: .
      dockerfile: alpine.Dockerfile
    image: "alpine-skeleton:3.11"
    container_name: skeleton-builder
    volumes:
      - ".:/root/builder"
    working_dir: /root
    command: /bin/ash -c "
      ./builder/build-frontend.sh &&
      ./builder/build-backend.sh .alpine &&
      ./builder/build-apk-package.sh &&
      tail -f /dev/null
      "
    stop_signal: SIGKILL

  deb-builder:
    build:
      context: .
      dockerfile: ubuntu.Dockerfile
    image: "ubuntu-skeleton:bionic"
    container_name: skeleton-builder
    volumes:
      - ".:/root/builder"
    working_dir: /root
    command: /bin/bash -c "
      ./builder/build-frontend.sh &&
      ./builder/build-backend.sh .ubuntu &&
      ./builder/build-package.sh ubuntu.deb &&
      tail -f /dev/null
      "
    stop_signal: SIGKILL


  deb-runtime:
    build:
      context: .
      dockerfile: debian-runtime.Dockerfile
    image: "skeleton-debian:slim"
    container_name: skeleton-runtime
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
      - ".:/mnt/builder"
    working_dir: /root
    privileged: true
    #tty: true
    ports:
      - 5432:5432
      - 80:80
      - 443:443

  verifier:
    image: "nthachus/docker-cli:19.03"
    container_name: skeleton-verifier
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    depends_on:
      - builder
      - deb-runtime
    command: /bin/ash -c "
      docker exec -i skeleton-runtime /mnt/builder/verify-package.sh &&
      tail -f /dev/null
      "
    stop_signal: SIGKILL
